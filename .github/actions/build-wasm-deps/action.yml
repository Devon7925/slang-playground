# Composite action to download and build WASM dependencies (slang release, spirv-tools build)
name: 'Download and build WASM Deps'
description: 'Download Slang release and build SPIRV-tools WASM dependencies for the project.'
inputs:
  build-artifacts-dir:
    description: 'Directory to move built artifacts into.'
    required: true
    default: ./src
runs:
  using: 'composite'
  steps:
    - name: Setup emsdk (for SPIRV-tools build)
      if: steps.cache_spirv_tools.outputs.cache-hit != 'true'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build
        if [ ! -d "emsdk" ]; then
          git clone https://github.com/emscripten-core/emsdk.git
          sed -i 's/\r$//' emsdk/emsdk emsdk/emsdk_env.sh
        fi

    - name: download slang-wasm release
      uses: robinraju/release-downloader@v1.11
      with:
        repository: "shader-slang/slang"
        latest: true
        fileName: "*wasm.zip"
        extract: true

    - name: process slang-wasm files
      shell: bash
      run: |
        # Rename interface.d.ts to slang-wasm.d.ts to match expected naming
        mv interface.d.ts slang-wasm.d.ts
        
        # Compress the WASM file as expected by the playground
        gzip -c slang-wasm.wasm > slang-wasm.wasm.gz
        
        # Clean up uncompressed WASM file
        rm slang-wasm.wasm

    - name: get spirv-tool head commit
      shell: bash
      run: |
        if [ ! -d "spirv-tools" ]; then
          git clone https://github.com/KhronosGroup/SPIRV-Tools.git spirv-tools
          pushd spirv-tools
          git checkout vulkan-sdk-1.3.290.0
          popd
        fi
        git -C spirv-tools rev-parse HEAD > key-spirv-tool.txt

    - name: restore spirv-tools
      id: cache_spirv_tools
      uses: actions/cache/restore@v4
      with:
        path: |
          ./spirv-tools.wasm
          ./spirv-tools.js
          ./spirv-tools.d.ts
        key: ${{ hashFiles('key-spirv-tool.txt') }}

    - name: spirv-tools-wasm build
      if: steps.cache_spirv_tools.outputs.cache-hit != 'true'
      shell: bash
      run: |
        /bin/bash -x ./build_scripts/spirv-tool-wasm-build.sh

    - name: save spirv-tools-wasm
      if: steps.cache_spirv_tools.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          ./spirv-tools.wasm
          ./spirv-tools.js
          ./spirv-tools.d.ts
        key: ${{ hashFiles('key-spirv-tool.txt') }}

    - name: Move artifacts
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-artifacts-dir }}
        mv ./slang-wasm.wasm.gz ./slang-wasm.js ./slang-wasm.d.ts ${{ inputs.build-artifacts-dir }}/
        mv ./spirv-tools.wasm ./spirv-tools.js ./spirv-tools.d.ts ${{ inputs.build-artifacts-dir }}/