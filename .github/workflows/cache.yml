# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: cache experiment

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: restore slang-wasm
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: ./testCache.txt
          key: 0x12345

      - name: generate dummy file
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo "dummy file" > testCache.txt

      # we will save the file when cache mis
      - name: save slang-wasm
        if: always() && steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ./testCache.txt
          key: 0x12345
